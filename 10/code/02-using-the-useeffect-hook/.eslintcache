[{"D:\\FRONTEND\\React\\10\\code\\02-using-the-useeffect-hook\\src\\index.js":"1","D:\\FRONTEND\\React\\10\\code\\02-using-the-useeffect-hook\\src\\App.js":"2","D:\\FRONTEND\\React\\10\\code\\02-using-the-useeffect-hook\\src\\components\\MainHeader\\MainHeader.js":"3","D:\\FRONTEND\\React\\10\\code\\02-using-the-useeffect-hook\\src\\components\\Home\\Home.js":"4","D:\\FRONTEND\\React\\10\\code\\02-using-the-useeffect-hook\\src\\components\\Login\\Login.js":"5","D:\\FRONTEND\\React\\10\\code\\02-using-the-useeffect-hook\\src\\components\\MainHeader\\Navigation.js":"6","D:\\FRONTEND\\React\\10\\code\\02-using-the-useeffect-hook\\src\\components\\UI\\Button\\Button.js":"7","D:\\FRONTEND\\React\\10\\code\\02-using-the-useeffect-hook\\src\\components\\UI\\Card\\Card.js":"8","D:\\FRONTEND\\React\\10\\code\\02-using-the-useeffect-hook\\src\\store\\auth-context.js":"9"},{"size":169,"mtime":1616589577000,"results":"10","hashOfConfig":"11"},{"size":1331,"mtime":1647172055238,"results":"12","hashOfConfig":"11"},{"size":333,"mtime":1647006152164,"results":"13","hashOfConfig":"11"},{"size":347,"mtime":1647005353208,"results":"14","hashOfConfig":"11"},{"size":3880,"mtime":1647005121191,"results":"15","hashOfConfig":"11"},{"size":1331,"mtime":1647006601928,"results":"16","hashOfConfig":"11"},{"size":353,"mtime":1616589577000,"results":"17","hashOfConfig":"11"},{"size":218,"mtime":1616589577000,"results":"18","hashOfConfig":"11"},{"size":124,"mtime":1647005583427,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1iqykew",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\FRONTEND\\React\\10\\code\\02-using-the-useeffect-hook\\src\\index.js",[],["41","42"],"D:\\FRONTEND\\React\\10\\code\\02-using-the-useeffect-hook\\src\\App.js",["43"],"import React, { useState, useEffect, useContext } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport AuthContext from './store/auth-context';\nimport MainHeader from './components/MainHeader/MainHeader';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const ctx=useContext(AuthContext)\n\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInInformation === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <React.Fragment>\n      <AuthContext.Provider value={{isLoggedIn:isLoggedIn, onLogout:logoutHandler}}>\n        {/* <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} /> */}\n        <MainHeader onLogout={logoutHandler} />\n        <main>\n          {!ctx.isLoggedIn && <Login  />}\n          {ctx.isLoggedIn && <Home />}\n        </main>\n      </AuthContext.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","D:\\FRONTEND\\React\\10\\code\\02-using-the-useeffect-hook\\src\\components\\MainHeader\\MainHeader.js",[],"D:\\FRONTEND\\React\\10\\code\\02-using-the-useeffect-hook\\src\\components\\Home\\Home.js",[],"D:\\FRONTEND\\React\\10\\code\\02-using-the-useeffect-hook\\src\\components\\Login\\Login.js",["44"],"import React, { useEffect, useState,useReducer} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  // const {isValid:emailIsValid} = emailState;\n  // const {isValid:passwordIsValid} = passwordState;\n\n// ---------REDUCER EMAIL & PASSWORD --------------------------------\n  const emailReducer=(state,action)=>{\n    if(action.type===\"USER_INPUT\"){\n      return {value:action.val, isValid:action.val.includes(\"@\")}\n    }\n    if(action.type===\"INPUT_BLUR\"){\n      return {value:state.value, isValid:state.value.includes(\"@\")}\n    }\n    return {value:\"\", isValid:false}\n  }\n  const [emailState, dispatchEmail]=useReducer(emailReducer,{value:\"\", isValid:null});\n\n\n  const passwordReducer=(state,action)=>{\n    if(action.type===\"USER_INPUT\"){\n      return {value:action.val, isValid:action.val.trim().length>6}\n    }\n    if(action.type===\"INPUT_BLUR\"){\n      return {value:state.value, isValid:state.value.trim().length>6}\n    }\n    return {value:\"\", isValid:false}\n  }\n  const [passwordState, dispatchPassword]=useReducer(passwordReducer,{value:\"\", isValid:null})\n  // useEffect(()=>{\n  //   console.log('Check validity');\n  //   setFormIsValid(\n  //     enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //   );\n  // }, [enteredEmail, enteredPassword])\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({type:'USER_INPUT', val:event.target.value})\n    setFormIsValid(\n      event.target.value.includes('@') && passwordState.isValid\n    );\n\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({type:'USER_INPUT', val:event.target.value})\n    setFormIsValid(\n      // event.target.value.trim().length > 6 && enteredEmail.includes('@')\n      event.target.value.trim().length > 6 && emailState.isValid\n    );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({ type: 'INPUT_BLUR', })\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchEmail({type: 'INPUT_BLUR'})\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n   // props.onLogin(emailState.value, enteredPassword);\n   props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","D:\\FRONTEND\\React\\10\\code\\02-using-the-useeffect-hook\\src\\components\\MainHeader\\Navigation.js",[],"D:\\FRONTEND\\React\\10\\code\\02-using-the-useeffect-hook\\src\\components\\UI\\Button\\Button.js",[],"D:\\FRONTEND\\React\\10\\code\\02-using-the-useeffect-hook\\src\\components\\UI\\Card\\Card.js",[],"D:\\FRONTEND\\React\\10\\code\\02-using-the-useeffect-hook\\src\\store\\auth-context.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":20,"column":9,"nodeType":"51","messageId":"52","endLine":20,"endColumn":21},{"ruleId":"49","severity":1,"message":"53","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":26},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'loginHandler' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]